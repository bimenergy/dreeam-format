{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "building",
  "title": "Building",
  "type": "object",
  "allOf": [
    { "$ref": "Feature#" },
    {
      "required": ["buildingId", "properties", "userId"],
      "properties": {
        "buildingId": {
          "type": "string",
          "description": "ID for this building, not that many building objects will have the same id"
        },
        "versionId": {
          "type": "string",
          "description": "Unique ID to identify a specific version of the building together with previous versions"
        },
        "parentVersionId": {
          "type": "string",
          "description": "This is how the building can get complete. Only an original/root building will not have this id"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "When this version was created in the system"
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user creating this version"
        },
        "admin": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User ids with full rights to this building"
        },
        "write": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User ids that can create new change sets"
        },
        "read": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User ids with read rights to this building"
        },
        "public": {
          "type": "boolean",
          "default": "false",
          "description": "If this is true, everyone can read the building"
        },
        "geometry": {
          "$id": "geometry",
          "type": "object",
          "title": "Geometry",
          "description": "This is a simple geometry as described in GeoJson standard"
        },
        "properties": {
          "default": {},
          "additionalProperties": false,
          "$id": "properties",
          "title": "Building Properties",
          "type": "object",
          "description": "Description of the properties (CityGML: attributes) object",
          "properties": {
            "name": {
              "type": "string",
              "$id": "name",
              "title": "Name",
              "description": "Any arbitrary name string for prepresenting the building as whole"
            },
            "description": {
              "type": "string",
              "$id": "description",
              "title": "Description",
              "description": "Any arbitrary description string for building as whole"
            },
            "countryName": {
              "type": "string"
            },
            "localityName": {
              "type": "string"
            },
            "thoroughfareNumber": {
              "type": "string"
            },
            "thoroughfareName": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            },
            "buildingType": {
              "$id": "buildingType",
              "title": "Building Type",
              "description": "Classification of building according with their usage and form",
              "type": "string",
              "enum": [
                "apartmentBlock",
                "multiFamilyHouse",
                "rowHouse",
                "singleFamilyHouse",
                "terracedHouse"
              ]
            },
            "measuredHeight": {
              "$id": "measuredHeight",
              "title": "Measured Height",
              "type": "number",
              "description": "Measured height is the difference in [m] between the highest point of the roof structure and the defined footprint of the building"
            },
            "storeysAboveGround": {
              "$id": "storeysAboveGround",
              "title": "Storeys Above Ground",
              "type": "number",
              "description": "Number of storeys above ground"
            },
            "storeysBelowGround": {
              "$id": "storeysBelowGround",
              "title": "Storeys Below Ground",
              "type": "number",
              "description": "Number of storeys below ground"
            },
            "storeyHeightsAboveGround": {
              "$id": "storeyHeightsAboveGround",
              "title": "Storey Heights Above Ground",
              "type": "array",
              "items": {"type": "number"},
              "description": "List order for storey heights above ground: first floor, second floor,..."
            },
            "storeyHeightsBelowGround": { 
              "$id": "storeyHeightsBelowGround",
              "title": "Storey Heights Below Ground",
              "type": "array",
              "description": "List order for storey heights below ground: first floor below ground, second floor below ground,... ",
              "items": {"type": "number"}
            },
            "yearOfConstruction": {
              "$id": "yearOfConstruction",
              "title": "Year of Construction",
              "description": "When the building was built, four digits",
              "type": "integer"
            },
            "constructionWeight": {
              "$id": "constructionWeight",
              "title": "Construction Weight",
              "description": "Enumeration for the construction weight",
              "type": "string",
              "enum": [
                "veryLight",
                "light",
                "medium",
                "heavy"
              ]
            },
            "grossVolume": {
              "$id": "grossVolume",
              "title": "Gross Volume",
              "description": "Total volume delimited by the external building dimension",
              "type": "number"
            },
            "netVolume": {
              "$id": "netVolume",
              "title": "Net Volume",
              "description": "Total volume delimited by the internal building dimension",
              "type": "number"
            },
            "energyReferenceVolume": {
              "$id": "energyReferenceVolume",
              "title": "Energy Reference Volume",
              "description": "Volume to be used in thermal calculations",
              "type": "number"
            },
            "grossFloorArea": {
              "$id": "grossFloorArea",
              "title": "Gross Floor Area",
              "description": "Outer area of the building",
              "type": "number"
            },
            "netFloorArea": {
              "$id": "netFloorArea",
              "title": "Net Floor Area",
              "description": "Interior floor area of the building",
              "type": "number"
            },
            "energyReferenceArea": {
              "$id": "energyReferenceArea",
              "title": "Energy Reference Area",
              "description": "This is the heated area to use as reference in energy calculation",
              "type": "number"
            },
            "buildingMainConstruction": {
              "$id": "buildingMainConstruction",
              "title": "Building Main Construction",
              "description": "This is used for any initial specification of a main construction in the climate shell"
            },
            "numberOfBuildingUnits": {
              "$id": "numberOfBuildingUnits",
              "title": "Number of building units",
              "description": "Custom property to specify number of building units in this building, this will generate the same amount of building units",
              "type": "number"
            },
            "numberOfRooms": {
              "$id": "numberOfRooms",
              "title": "Number of rooms",
              "description": "Custom property to specify how many rooms in total in the building, initially this will be equally distributed between the building units",
              "type": "number"
            },
            "numberOfOccupants": {
              "$id": "numberOfOccupants",
              "title": "Number of Occupants",
              "description": "Number of occupants that resided in the building. Will be used for other usage properties that use per person measures"
            },
            "occupancyTime": {
              "$id": "occupancyTime",
              "title": "Occupancy Time",
              "description": "How many hours per person in the building per day"
            },
            "hotWaterPerPerson": {
              "$id": "hotWaterPerPerson",
              "title": "Hot Water per Person",
              "description": "How many m3 water per person and day"
            },
            "electricityLighting": {
              "$id": "electricityLighting",
              "title": "Electricity for lighting",
              "description": "Electricity for lighting, kWh"
            },
            "electricityAppliences": {
              "$id": "electricityAppliences",
              "title": "Electricity for appliences",
              "description": "Electricity for appliences, kWh"
            },
            "electricityAuxiliary": {
              "$id": "electricityAuxiliary",
              "title": "Electricity for auxiliaries",
              "description": "Electricity for auxiliaries, kWh"
            },
            "exteriorWallUValue": {
              "$id": "exteriorWallUValue",
              "title": "Exterior wall U-Value",
              "description": "One U-Value to use for all exterior wall in any orientation",
              "type": "number"
            },
            "roofUValue": {
              "$id": "roofUValue",
              "title": "Roof U-Value",
              "description": "A U-Value to use for the roof building parts",
              "type": "number"
            },
            "sogUValue": {
              "$id": "sogUValue",
              "title": "Slab on ground U-Value",
              "description": "A U-Value to use for the slab on ground",
              "type": "number"
            },
            "windowUValue": {
              "$id": "windowUValue",
              "title": "Window U-Value",
              "description": "A U-Value to use for the windows",
              "type": "number"
            },
            "glazing": {
              "$id": "glazing",
              "title": "Glazing",
              "description": "A percentage of glazing for the facades",
              "type": "number",
              "min": 0,
              "max": 100
            },
            "width": {
              "$id": "width",
              "title": "Width",
              "description": "For very simple box shaped buildings a width can be used",
              "type": "number"
            },
            "length": {
              "$id": "length",
              "title": "Length",
              "description": "For very simple box shaped buildings a length can be used",
              "type": "number"
            },
            "insideMinTemperature": {
              "$id": "insideMinTemperature",
              "title": "Inside min temperature",
              "description": "This is the minimum expected inside temperature in the building if nothing else is specified",
              "type": "number"
            },
            "insideMaxTemperature": {
              "$id": "insideMaxTemperature",
              "title": "Inside max temperature",
              "description": "This is the maximum expected inside temperature in the building if nothing else is specified",
              "type": "number"
            },
            "exhaustAirFlow": {
              "$id": "exhaustAirFlow",
              "title": "Exhaust air flow",
              "description": "This is the air flow in m3 per hour",
              "type": "number"
            },
            "supplyAirFlow": {
              "$id": "supplyAirFlow",
              "title": "Supply air flow",
              "description": "This is the air flow in m3 per hour",
              "type": "number"
            },
            "yearlyEnergyConsumption": {
              "$id": "yearlyEnergyConsumption",
              "title": "Yearly energy consumption",
              "description": "Measured yearly energy consumption in kWh",
              "type": "number"
            },
            "exteriorWallThickness": {
              "$id": "exteriorWallThickness",
              "title": "Exterior wall thickness",
              "description": "Exterior wall thickness of in meters",
              "type": "number"
            },
            "longitude": {
              "$id": "longitude",
              "title": "Longitude",
              "description": "Longitude",
              "type": "number"
            },
            "latitude": {
              "$id": "latitude",
              "title": "Latitude",
              "description": "Latitude",
              "type": "number"
            },
            "conditionExteriorWalls": {
              "$id": "conditionExteriorWalls",
              "title": "Condition of Exterior Walls",
              "description": "An enumeration to be desided on how to quickly graduate condition"
            },
            "conditionWindows": {
              "$id": "conditionWindows",
              "title": "Condition of windows",
              "description": "An enumeration to be desided on how to quickly graduate condition"
            },
            "conditionRoof": {
              "$id": "conditionRoof",
              "title": "Condition of Roof",
              "description": "An enumeration to be desided on how to quickly graduate condition"
            },
            "conditionHeatingSystem": {
              "$id": "conditionHeatingSystem",
              "title": "Condition of Heating System",
              "description": "An enumeration to be desided on how to quickly graduate condition"
            },
            "conditionVentilation": {
              "$id": "conditionVentilation",
              "title": "Condition of Ventilation",
              "description": "An enumeration to be desided on how to quickly graduate condition"
            },
            "ventilationType": {
              "$id": "ventilationType",
              "title": "Ventilation Type",
              "description": "Type of ventilation of the building",
              "type": "string",
              "enum": [
                "natural",
                "exhaustAir",
                "heatRecovery"
              ]
            },
            "windowType": {
              "$id": "windowType",
              "title": "Window Type",
              "description": "Enumeration on windows make ups",
              "type": "string",
              "enum": [
                "single",
                "double",
                "triple"
              ]
            },
            "windowFrameMaterial": {
              "$id": "windowFrameMaterial",
              "title": "Window Frame Material",
              "description": "Enumeration needed"
            },
            "shadingFactor": {
              "$id": "shadingFactor",
              "title": "Shading Factor",
              "description": "How much shading in general in percentage",
              "type": "number",
              "min": 0,
              "max": 100
            },
            "heatingSystemType": {
              "$id": "heatingSystemType",
              "title": "Heating System Type",
              "description": "Enumeration needed"
            },
            "heatingSystemIsDecentralised": {
              "$id": "heatingSystemIsDecentralised",
              "title": "Heating system is Decentralised",
              "description": "If Heating system is Decentralised",
              "type": "boolean"
            },
            "energyCarrier": {
              "$id": "energyCarrier",
              "title": "Energy Carrier",
              "description": "Energy carrier, like gas. Enumeration needed"
            },
            "energyCarrierYearOfConstruction": {
              "$id": "energyCarrierYearOfConstruction",
              "title": "Energy Carrier, Year of Construction",
              "description": "Construction year of energy carrier, if any",
              "type": "number"
            },
            "solarCells": {
              "$id": "solarCells",
              "title": "Solar cells",
              "description": "Solar cells are installed. This propety needs to be specified more"
            }
          }
        },
        "rooms": {
          "type": "array",
          "items": {
            "$ref": "room"
          },
          "default": []
        },
        "thermalZones": {
          "type": "array",
          "items": {
            "$ref": "thermalZone"
          }
        },
        "usageZones": {
          "type": "array",
          "items": {
            "$ref": "usageZone"
          }
        },
        "buildingUnits": {
          "type": "array",
          "items": {
            "$ref": "buildingUnit"
          }
        },
        "refurbishmentMeasures": {
          "type": "array",
          "items": {
            "$ref": "refurbishmentMeasure"
          }
        }
      }
    }
  ],
  "definitions": {
    "room": {
      "type": "object",
      "title": "Room",
      "$id": "room",
      "description": "A Room is a thematic object for modelling the closed parts inside a building",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "thermalZoneId": {
          "type": "string",
          "description": "Connects this room to a thermal zone if this room should be part of energy simulation"
        }
      }
    },
    "thermalZone": {
      "$id": "thermalZone",
      "title": "Thermal Zone",
      "type": "object",
      "description": "A thermal zone is a zone of a building which serves as unit for the building heating and cooling simulation. For the simulation, a thermal zone is considered as isothermal. It is a semantic object, which may be or not related to a geometric entity.",
      "properties": {
        "usageZoneId": {
          "type": "string",
          "description": "Connects this room to a usage zone if this room should be part of energy simulation"
        },
        "additionalThermalBridgeUValue": {
          "$id": "additionalThermalBridgeUValue",
          "title": "Additional Thermal Bridge U-Value",
          "description": "Additional U-Value in W/K,m2 for this zone",
          "type": "number"
        },
        "effectiveThermalCapacity": {
          "$id": "effectiveThermalCapacity",
          "title": "Effective Thermal Capacity",
          "description": "Capacity in J/K",
          "type": "number"
        },
        "infiltrationRate": {
          "$id": "infiltrationRate",
          "title": "Infiltration Rate",
          "description": "Still unclear how to use"
        },
        "indirectlyHeatedAreaRatio": {
          "$id": "indirectlyHeatedAreaRatio",
          "title": "Indirectly Heated Area Ratio",
          "description": "Still unclear how to use"
        },
        "grossVolume": {
          "$id": "grossVolume",
          "title": "Gross Volume",
          "description": "Total volume delimited by the external building dimension",
          "type": "number"
        },
        "netVolume": {
          "$id": "netVolume",
          "title": "Net Volume",
          "description": "Total volume delimited by the internal building dimension",
          "type": "number"
        },
        "energyReferenceVolume": {
          "$id": "energyReferenceVolume",
          "title": "Energy Reference Volume",
          "description": "Volume to be used in thermal calculations",
          "type": "number"
        },
        "grossFloorArea": {
          "$id": "grossFloorArea",
          "title": "Gross Floor Area",
          "description": "Outer area of the building",
          "type": "number"
        },
        "netFloorArea": {
          "$id": "netFloorArea",
          "title": "Net Floor Area",
          "description": "Interior floor area of the building",
          "type": "number"
        },
        "energyReferenceArea": {
          "$id": "energyReferenceArea",
          "title": "Energy Reference Area",
          "description": "This is the heated area to use as reference in energy calculation",
          "type": "number"
        },
        "isCooled": {
          "$id": "isCooled",
          "title": "Is cooled?",
          "description": "If this is false, cooling demand should not be considered for this zone",
          "type": "boolean",
          "default": "true"
        },
        "isHeated": {
          "$id": "isHeated",
          "title": "Is heated?",
          "description": "If this is false, heating demand should not be considered for this zone",
          "type": "boolean",
          "default": "true"
        },
        "volumeGeometry": {
          "$id": "volumeGeometry",
          "title": "Volume Geometry",
          "description": "describes an explicit volume geometry in the case where the room geometries should not be used to define the thermal zone geometry"
        }
      }
    },
    "usageZone": {
      "$id": "usageZone",
      "title": "Usage Zone",
      "type": "object",
      "description": "A usage zone is a zone of a building with homogeneous usage type"
    },
    "buildingUnit": {
      "$id": "buildingUnit",
      "title": "Building Unit",
      "type": "object",
      "description": "Object with lockable access from the outside or from a common area (i.e. not from another BuildingUnit), which is atomic, functionally independent, and may be separately sold, rented out, inherited, etc (source: INSPIRE Data Specification Buildings, v3.0, p.29)."
    },
    "refurbishmentMeasure": {
      "$id": "refurbishmentMeasure",
      "title": "Refurbishment Measure",
      "description": "Reference designation of the degree of refurbishment",
      "type": "object",
      "properties": {
        "dateOfRefurbishment": {
          "type": "string"
        },
        "descriptionOfRefurbishment": {
          "type": "string"
        },
        "levelOfRefurbishment": {
          "type": "string",
          "enum": [
            "AdvancedRefurbishment",
            "UsualRefurbishment"
          ]
        }
      }
    }
  }
}